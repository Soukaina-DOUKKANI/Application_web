{"version":3,"sources":["Authentification/LoginContext.js","images/logo-white.png","Layouts/Header.js","images/logo.png","Authentification/Login.js","Authentification/AxiosInstance.js","Gestion.Comptes.Utilisateurs/Utilisateurs.js","Layouts/Main.Administrateur/Procedures/Details_procedure.js","Layouts/Main.Administrateur/Parametre.js","Layouts/Main.Administrateur/Procedures/Graphe.js","Layouts/Main.Administrateur/ExportToExcel.js","Layouts/Main.Utilisateurs/Procedures/Interface_utilisateur.js","Layouts/Home/List_procedures.js","Gestion.Acces.Utilisateurs/Permissions.js","Gestion.Acces.Utilisateurs/ProtectedRoutes.js","Layouts/Main.Administrateur/Procedures/GrapheParametres.js","Gestion.Comptes.Utilisateurs/Lister_utilisateurs.js","Layouts/Main.Administrateur/Procedures/AjoutProcedure.js","Layouts/Main.Administrateur/Fonctions/Details_fonction.js","Layouts/Main.Administrateur/Fonctions/GrapheParametresFct.js","Layouts/Main.Administrateur/Fonctions/GrapheFct.js","Layouts/Main.Utilisateurs/Fonctions/Interface_utilisateur2.js","Layouts/Main.Administrateur/Fonctions/AjoutFonction.js","images/microphone.png","Moteur.recherche/SearchBar.js","Layouts/Home/Home.js","Gestion.Acces.Utilisateurs/AppRoutes.js","App.js","index.js"],"names":["LoginContext","createContext","LoginProvider","props","useState","isLoggedIn","role","user","setUser","Provider","value","children","Header","useContext","Logout","localStorage","removeItem","className","to","class","src","logo","alt","id","onClick","Login","useForm","handleSubmit","register","history","useHistory","axios","defaults","withCredentials","onSubmit","login","post","then","result","data","auth","setItem","token","response","push","autoComplete","placeholder","name","type","ref","required","AxiosManager","AxiosInstance","create","baseURL","interceptors","request","use","config","getItem","headers","Authorization","Promise","resolve","reject","error","status","Utilisateurs","match","alerte","setAlerte","utilisateur","identifiant","pwd","procedures","fonctions","userData","setUserData","control","procedure","setProcedure","fonction","setFonction","useEffect","Axios","get","catch","err","console","log","params","proc","JSON","parse","obj2","val","i","obj","ID","nom_utilisateur","handleChange","e","target","prevUser","style","for","onChange","onBlur","preventDefault","generator","generate","length","numbers","lowercase","uppercase","as","Select","defaultValue","options","map","item","P","label","isMulti","isClearable","isSearchable","Select2","F","options2","alert","Details_procedures","parameters","setData","baseDD","formData","stringify","SP_NAME","DATABASE","SCHEMA","Author_name","CREATE_DATE","MODIFY_DATE","DATA_TYPE","PARAMETER_NAME","Parametre","valeur","bdd","requete","setValue","isDate","toLowerCase","isValue","values","setValues","selectedDate","setSelectedDate","changerDate","shouldDirty","render","selected","dateFormat","showYearDropdown","scrollableMonthYearDropdown","Valeur","Graphe","dataG","setDataG","types","objChart","columns","axisChart","titre","axes","List_keys","tb_keys","Object","keys","key","key_","split","find","traiterObj","x","tick","format","Moment","y","text","position","y2","show","c3","bindto","title","axis","ExportToExcel","apiData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","Interface_utilisateur","dataGraph","setDataGraph","df","charAt","List_procedures","display","setDisplay","search","setSearch","fct","setFct","pcd","setPcd","dataFct","setDataFct","allData","setAllData","setBDD","setBaseDD","resultat","setResult","p","checked","event","filter","indexOf","sort","a","b","Permissions","roles","ProtectedRoutes","Component","component","rest","GrapheParametre","register2","handleSubmit2","graph","setGraph","setChartData","content","corrigerGraphe","handleChangeCheckbox","items","chartData","colSpan","defaultChecked","Lister_utilisateurs","listUser","setListUser","AjoutProcedure","Details_fonction","GrapheParametreFct","colspan","GrapheFct","Interface_utilisateur2","AjoutFonction","Search","searchData","setSearchData","transcript","useSpeechRecognition","searchKey","setSearchKey","SpeechRecognition","browserSupportsSpeechRecognition","startListening","continuous","language","microphone","styles","table_name","database_name","table_description","column_name","column_type","seance_vf","cours_cloture","volume","Home","AppRoutes","path","exact","SearchBar","GrapheParametres","GrapheParametresFct","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72464f5a.chunk.js","sourcesContent":["import React, {useState, createContext } from 'react';\r\n\r\n\r\nexport const LoginContext= createContext();\r\n\r\nexport const LoginProvider= (props)=>{\r\n    const [user, setUser]=useState({isLoggedIn : false, role :''});\r\n    return (\r\n        <LoginContext.Provider value= {[user, setUser]}>\r\n            {props.children}\r\n        </LoginContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo-white.871708e5.png\";","import React, {useContext} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Link} from 'react-router-dom';\r\nimport {LoginContext} from '../Authentification/LoginContext';\r\nimport logo from '../images/logo-white.png';\r\nimport './Header.style.css';\r\n\r\nexport default function Header(){\r\n    const [user,setUser]=useContext(LoginContext);\r\n\r\n    const Logout=()=>{\r\n        localStorage.removeItem('token');\r\n        setUser({isLoggedIn: false, role: ''});\r\n    }\r\n\r\n    if (user.isLoggedIn){\r\n        if(user.role=='admin'){\r\n            return(\r\n                <nav className= \" navbar navbar-expand-lg nav-color\">\r\n                    <div className=\"container \">\r\n                    <Link to='/' class=\"navbar-brand \" >\r\n                        <img className=\" image3\" src={logo} alt={logo}/>\r\n                    </Link>\r\n                        \r\n                    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav  \">\r\n                        <li className= \"nav-item active\">\r\n                            <Link to=\"/\" className=\"nav-link nav-text\" > Accueil</Link>\r\n                        </li>\r\n                        <li className= \"nav-item active\">\r\n                            <Link to=\"/Lister_utilisateurs\" className=\"nav-link nav-text \" > Utilisateurs</Link>\r\n                        </li>\r\n                        \r\n                        <li className= \"nav-item active\">\r\n                           <Link to=\"/Home\" onClick={Logout} className=\"nav-link nav-text \" > Déconnexion</Link>\r\n\r\n                        </li>\r\n                       \r\n                    </ul>\r\n                    \r\n                    </div>\r\n                    </div>\r\n        \r\n                </nav>)\r\n\r\n        }\r\n        else{\r\n            return(\r\n                <nav className= \" navbar navbar-expand-lg nav-color\">\r\n                <div className=\"container \">\r\n                <Link to='/' class=\"navbar-brand \" >\r\n                    <img className=\" image3\" src={logo} alt={logo}/>\r\n                </Link>\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav  \">\r\n                        <li className= \"nav-item active\">\r\n                            <Link to=\"/Affichage\" className=\"nav-link nav-text\" > Accueil</Link>\r\n                        </li><li className= \"nav-item active\">\r\n                           <Link to=\"/Home\" onClick={Logout} className=\"nav-link nav-text \" > Déconnexion</Link>\r\n\r\n                        </li>\r\n                       \r\n                    </ul>\r\n                        \r\n                </div>   \r\n                </div>\r\n        \r\n                </nav>)\r\n\r\n        }\r\n    }\r\n    else{\r\n        return null\r\n    }\r\n\r\n    \r\n\r\n\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo.b439c4ad.png\";","import React , {useContext} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport axios from 'axios';  \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {LoginContext} from '../Authentification/LoginContext';\r\nimport { useHistory } from 'react-router-dom';\r\nimport logo from '../images/logo.png';\r\nimport \"./Login.styles.css\";\r\nexport default function Login(){\r\n\r\n    const {handleSubmit, register}= useForm();\r\n    const [user, setUser]=useContext(LoginContext);\r\n    const history=useHistory();\r\n\r\n    axios.defaults.withCredentials= true;\r\n\r\n    const onSubmit= (login)=>{\r\n        axios.post(\"http://localhost:4000/connexion\", login) /* http://application.local/connexion */\r\n        .then((result) => {\r\n            if ( result.data.auth){\r\n                localStorage.setItem('token', result.data.token )\r\n                setUser({isLoggedIn: true, role : result.data.response.role})\r\n                history.push('/')               \r\n            }\r\n            \r\n        })   \r\n\r\n \r\n    }\r\n\r\n    return(\r\n        <div className=\"background-image\" >\r\n            <div >\r\n                <img className=\"image2\"  src={logo} alt=\"logo\"/>\r\n            </div>\r\n            <div className=\"login-block\">\r\n            <h1 className=\"h1\">Bienvenue</h1>\r\n            <form  onSubmit= {handleSubmit(onSubmit)}>\r\n                <input  id=\"identifiant\"  autoComplete='off' placeholder='Identifiant' name='identifiant' type=\"text\" ref={register({ required: true })}/>\r\n                <input id=\"password\" autoComplete='off' placeholder='Mot de passe' name='pwd' type=\"password\" ref={register({ required: true })}/> \r\n                \r\n                <button   type=\"submit\">Connexion</button>\r\n               \r\n            </form> \r\n\r\n       </div> \r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nconst AxiosManager = (setUser) => {\r\nconst AxiosInstance = axios.create({\r\n    baseURL: 'http://localhost:4000' /* http://application.local */ \r\n})\r\n\r\nAxiosInstance.interceptors.request.use(function (config) {\r\n    const token = localStorage.getItem(\"token\");\r\n    config.headers.Authorization =  token;\r\n\r\n    return config;\r\n});\r\n\r\nAxiosInstance.interceptors.response.use((response) =>{\r\n    return(\r\n        new Promise((resolve, reject)=>{\r\n            resolve(response)\r\n        })\r\n    )\r\n    \r\n},( error) =>{\r\n    if (!error.response){\r\n        return (\r\n            new Promise((resolve, reject)=>{\r\n                reject(error)\r\n            })\r\n\r\n        )\r\n\r\n    }\r\n\r\n    if (error.response.status=== 403){\r\n        \r\n        localStorage.removeItem(\"token\");\r\n        if(setUser){\r\n            setUser({isLoggedIn: false, role: ''});\r\n        }\r\n\r\n        return (\r\n            new Promise((resolve, reject)=>{\r\n                reject(error)\r\n            })\r\n\r\n        )\r\n        \r\n    }\r\n    else{\r\n        return (\r\n            new Promise((resolve, reject)=>{\r\n                reject(error)\r\n            })\r\n\r\n        )\r\n\r\n    }\r\n    \r\n}\r\n\r\n)\r\n\r\nreturn AxiosInstance;\r\n\r\n}\r\n\r\nexport default AxiosManager;","import React , {useState, useContext, useEffect} from 'react';\r\nimport {Controller, useForm} from 'react-hook-form';\r\nimport {LoginContext} from '../Authentification/LoginContext';\r\nimport Axios from '../Authentification/AxiosInstance'; \r\nimport generator from 'generate-password';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './Utilisateurs.styles.css';\r\nimport Select from 'react-select';\r\nimport Select2 from 'react-select';\r\n\r\n\r\nexport default function Utilisateurs({match}){\r\n     \r\n    const [alerte, setAlerte]=useState(false);\r\n    const [userData, setUserData] =useState({ id : 0, utilisateur : \"\", identifiant : \"\", pwd: \"\", procedures:[], fonctions:[]});\r\n    const {register, handleSubmit, control}= useForm();\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const [procedure, setProcedure]=useState([]);\r\n    const history= useHistory();\r\n    const [fonction , setFonction] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        Axios(setUser).get('/List_procedures')\r\n        .then(result => setProcedure(result.data))\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n    \r\n    useEffect(() => {\r\n        Axios(setUser).get('/List_fonctions')\r\n        .then(result => {setFonction(result.data)})\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n    \r\n    \r\n    useEffect(() => {\r\n    const id=match.params.id;\r\n    if(id){\r\n        Axios(setUser).get(`/get_user/${id}`)\r\n        .then(result => {\r\n            const proc=JSON.parse(result.data.procedures)\r\n            const fct=JSON.parse(result.data.fonctions)\r\n            const data=(obj2)=>{\r\n                let val=[]\r\n                for (let i in obj2){\r\n                    val.push(obj2[i].value)\r\n                }\r\n                return(val)\r\n            }\r\n            console.log(data(proc)) \r\n            const obj={ \r\n                id : result.data.ID,\r\n                utilisateur : result.data.nom_utilisateur,\r\n                identifiant : result.data.identifiant,\r\n                pwd: result.data.pwd,\r\n                procedures: JSON.parse(result.data.procedures),\r\n                fonctions: JSON.parse(result.data.fonctions)\r\n                };\r\n            console.log(obj)\r\n            setUserData(obj);\r\n\r\n    \r\n        })\r\n        .catch(err=> console.log(err))\r\n\r\n    }\r\n    }, [])\r\n\r\n    const options=(obj)=>{\r\n        let options=[]\r\n        obj.map(item=>{\r\n           \r\n            options.push({value : item.P, label : item.P})\r\n        })\r\n\r\n        return (options)\r\n    }\r\n\r\n    const options2=(obj)=>{\r\n        let options=[]\r\n        obj.map(item=>{\r\n           \r\n            options.push({value : item.F, label : item.F})\r\n        })\r\n\r\n        return (options)\r\n    }\r\n\r\n    \r\n\r\n    const handleChange = e =>{\r\n        const {name, value }=e.target;\r\n        setUserData (prevUser => ({\r\n            ...prevUser,\r\n            [name] :value\r\n        }));\r\n\r\n    }\r\n    \r\n\r\n    \r\n\r\n    function password(){\r\n        const pass= generator.generate({\r\n            length: 15,\r\n            numbers: true,\r\n            lowercase: true,\r\n            uppercase: true,\r\n        });\r\n        return(pass)\r\n        \r\n    }\r\n\r\n    const onClick = (e)=>{\r\n\r\n        e.preventDefault();\r\n        setUserData( prevUser =>({\r\n            ...prevUser, \r\n            pwd : password()\r\n        }))\r\n\r\n    }\r\n    \r\n\r\n\r\n    const onSubmit=(data)=>{\r\n        console.log(data)\r\n        Axios(setUser).post('/users', data).then( result => console.log(result))\r\n        .catch(err => console.log(err));  \r\n        //setUserData({ id : 0, utilisateur : \"\", identifiant : \"\", pwd: \"\", procedures:[]})\r\n        history.push('/Lister_utilisateurs')\r\n    }\r\n\r\n\r\n    const onBlur=(e)=>{\r\n\r\n        const identifiant= e.target.value;\r\n        if(identifiant!=''){\r\n            const id= userData.id;\r\n        Axios(setUser).get(`/checkIdentifiant/${identifiant}/${id}`)\r\n        .then(result => {\r\n            if (result.data== 'abort'){\r\n                setUserData( prevUser =>({\r\n                    ...prevUser, \r\n                    identifiant: \"\"\r\n                \r\n                }))\r\n                setAlerte(true)\r\n\r\n            }\r\n            else{\r\n                setAlerte(false)\r\n            }\r\n        })\r\n        .catch(err => console.log(err));  \r\n\r\n        \r\n    }    \r\n\r\n    }\r\n    \r\n    console.log('procedures',userData.procedures)\r\n\r\n\r\n    return (\r\n        <div className='utilisateurs-creation' >\r\n            <form className=\"container\" onSubmit={handleSubmit(onSubmit)}>\r\n            <h2 style={{'marginBottom':'20px'}}> Gestion des comptes Utilisateurs</h2>\r\n\r\n                <div className=\"form-group\" >\r\n                    <input type=\"hidden\" name='id' value={userData.id} ref={register}/>\r\n                    <p className='row'>\r\n                    <label className='col-md-4' for =\"utilisateur\"> Ajouter le nom de l'utilisateur</label>\r\n                    <input className=\"form-control col-sm-7 \" onChange={handleChange} value={userData.utilisateur} id=\"utilisateur\" name=\"utilisateur\" type=\"text\" autoComplete='off' ref={register({ required: true })}/>\r\n                    \r\n                    </p>\r\n                    <p className='row'>\r\n                       <label className='col-md-4' for=\"identifiant\"> Créer un identifiant</label>\r\n                       <input className=\"form-control col-sm-7\"  onChange={handleChange} onBlur={onBlur} value={userData.identifiant} id=\"identifiant\" name=\"identifiant\" type=\"text\" autoComplete='off' ref={register({ required: true })}/>\r\n                    </p>\r\n                    \r\n                    {alerte && (\r\n                        <div class=\"alert alert-danger\" role=\"alert\">\r\n                            Identifiant déjà existant!\r\n                        </div>\r\n                    )}\r\n\r\n                    <p className=\"input-group \">\r\n                        <label for=\"pwd\"> Créer un mot de passe</label>\r\n                        \r\n                        <input style={{'marginLeft':'15%'}} autoComplete='off' className=\"form-control col-md-6\" onChange={handleChange} value={userData.pwd} name=\"pwd\" id=\"pwd\"  ref={register({ required: true })} />\r\n                        \r\n                        <div   className=\"input-group-append\">\r\n                            <button style={{'paddingRight':'22px'}} className=\"btn btn-outline-primary  \" type=\"button\" onClick={onClick}> Générer</button>\r\n                        </div>\r\n                    </p>\r\n                    <p className='row'>\r\n                    <label className='col-md-3' >Liste des procédures </label>\r\n                    <div  style={{'marginLeft':'8%', 'width':'58%'}} >\r\n                        <Controller\r\n                            as={Select}\r\n                            name=\"procedures\"\r\n                            control={control}\r\n                            value={userData.procedures}\r\n                            defaultValue=\"\"\r\n                            placeholder='Selectionner'\r\n                            options={options(procedure)}\r\n                            isMulti\r\n                            isClearable\r\n                            isSearchable\r\n                        />\r\n                    </div>\r\n                    \r\n                    </p>\r\n                    \r\n                    <p className='row'>\r\n                    <label className='col-md-3' >Liste des fonctions</label>\r\n                    <div style={{'marginLeft':'8%', 'width':'58%'}}>\r\n                    <Controller\r\n                            as={Select2}\r\n                            name=\"fonctions\"\r\n                            control={control}\r\n                            value={userData.fonctions}\r\n                            defaultValue=\"\"\r\n                            placeholder='Selectionner'\r\n                            options={options2(fonction)}\r\n                            isMulti\r\n                            isClearable\r\n                            isSearchable\r\n                            \r\n                        />\r\n                    </div>\r\n                    </p>\r\n                </div>\r\n                <button  onClick={()=> alert('Modifications enregistrées')} type=\"submit\" style={{'marginLeft':'81%'}} className=\"  btn btn-primary\" >Enregistrer </button>\r\n\r\n\r\n            </form>\r\n        </div>)\r\n     \r\n\r\n}","import React, { useState, useEffect , useContext } from 'react' ; \r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Axios from '../../../Authentification/AxiosInstance'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../../styles/Design.css\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Link} from 'react-router-dom';\r\nimport './procedures.css';\r\n\r\nexport default function Details_procedures({match}){\r\n    const {register, handleSubmit}= useForm();\r\n    const [data, setData] = useState({parameters : []});  \r\n    const [user,setUser]=useContext(LoginContext);\r\n\r\n  \r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/page1/${match.params.name}/${match.params.baseDD}`).then(result => setData(result.data))\r\n        .catch(err => console.log(err));  \r\n          \r\n    }, []); \r\n    \r\n    \r\n    \r\n    const onSubmit = (formData)=>{\r\n        Axios(setUser).post(`/set_data/${match.params.name}/${match.params.baseDD}`, formData)\r\n        .then (result => console.log(result))\r\n        .catch(err => console.log(err));  \r\n        console.log(JSON.stringify(formData))\r\n\r\n    }\r\n    return(\r\n        \r\n        <div >\r\n               \r\n        <form   className=\"container\" onSubmit={handleSubmit(onSubmit)}> \r\n        <h2  style={{'marginTop': '10px', 'marginBottom':'20px'}} > Métadonnées de la  procédure {data.SP_NAME} </h2>\r\n\r\n        <table className=\"table table-bordered\" >  \r\n        \r\n            <tbody>\r\n                <tr>\r\n                    <input type=\"hidden\" value= {match.params.baseDD} name=\"bdd\" ref={register}/>\r\n                   <th>NOM DE LA PROCEDURE</th> \r\n                   <td>\r\n                    <input className='form-control col-sm-11' name=\"procedure\" autoComplete=\"off\"  type=\"text\" placeholder=\"Renommer\" ref={register}/>  \r\n                   </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>NOM DE LA BDD</th> \r\n                    <td>{data.DATABASE}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>SCHEMA</th>  \r\n                    <td>{data.SCHEMA}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>DESCRIPTION</th>  \r\n                   <td>\r\n                   <textarea className='form-control col-sm-11' name=\"description\" autoComplete=\"off\"  type=\"text\"  placeholder=\"Ajouter une description\" ref={register} ></textarea> \r\n                   </td>\r\n                </tr>\r\n                <tr>\r\n                   <th>NOM DE L'AUTEUR</th>\r\n                   <td>{data.Author_name}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>DATE DE CREATION</th> \r\n                   <td>{data.CREATE_DATE}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>DATE DE MODIFICATION</th> \r\n                   <td>{data.MODIFY_DATE}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>PARAMETRES</th> \r\n                   <td >\r\n                       {data.parameters.map(item =>{\r\n                           if (item.DATA_TYPE==='date'){\r\n                                return (\r\n                                    <div className='parameter-border'>\r\n                                        <p className='row'> \r\n                                            <label className=\"col-md-2\" >{item.PARAMETER_NAME}</label>\r\n                                            <input  className='form-control col-sm-9' name={item.PARAMETER_NAME} autoComplete=\"off\"  type=\"text\" placeholder=\"Renommer\" ref={register}/>\r\n                                        </p>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                            if (item.DATA_TYPE==='varchar') {\r\n                                return(\r\n                                <div className='parameter-border'>\r\n                                    <p className='row' >\r\n                                        <label className=\"col-md-2\">{item.PARAMETER_NAME}</label>\r\n                                        <input   className='form-control col-sm-9'  autoComplete=\"off\" name={item.PARAMETER_NAME} type=\"text\" placeholder=\"Renommer\" ref={register}/>\r\n                                    </p>\r\n                                    <p className='row'>\r\n                                        <label className=\"col-md-2\"></label>\r\n                                        <input className='form-control col-sm-9' autoComplete='OFF' placeholder='insérer une valeur' name='valeur' type='text' ref={register}/>\r\n                                        \r\n                                    </p>\r\n                                    <p className='row'>\r\n                                        <label className=\"col-md-2\">OU</label>\r\n                                        <textarea className='form-control col-sm-9'   autoComplete=\"off\" placeholder=\" insérer une requête\" name=\"request\" type=\"text\" ref={register}></textarea>\r\n                                    </p>\r\n                                </div>\r\n                                );\r\n                            }\r\n                            \r\n\r\n                       })}</td>\r\n                </tr>\r\n            </tbody>\r\n           </table> \r\n            <div className=\" container row \"  style={{'marginBottom':'60px'}}> \r\n            <button style={{'marginLeft':'400px'}} onClick={()=> alert('Opération réussie')} className=\"btn btn-primary\" type=\"submit\"> Enregistrer</button>\r\n            <div style={{'marginLeft':'30px'}}>\r\n            <Link to= {`/GrapheParametres/${data.SP_NAME} `}> \r\n                <button className=\"btn btn-info\" > Paramétrer le graphe</button> \r\n            </Link>\r\n            </div>\r\n            </div>\r\n           \r\n        </form> \r\n        \r\n        </div> \r\n        \r\n        )\r\n}","import React, { useEffect, useState, useContext } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {LoginContext} from '../../Authentification/LoginContext';\r\nimport Axios from '../../Authentification/AxiosInstance'; \r\nimport { Controller} from \"react-hook-form\";\r\nimport '../Main.Administrateur/Procedures/procedures.css';\r\n\r\n\r\nexport default function  Parametre({type, valeur,bdd, requete, register, control, setValue}) {\r\n    \r\n    const isDate= (type.toLowerCase()=='@date_in')? true : false; \r\n    const isValue=(valeur!==\"\")? true : false;\r\n    const [values, setValues]=useState([]);\r\n    const [selectedDate, setSelectedDate]=useState(null);\r\n    const [user,setUser]=useContext(LoginContext);\r\n\r\n\r\n\r\n    useEffect(() => {  \r\n        if (!isDate && !isValue){\r\n            Axios(setUser).get(`/Get_options/${requete}/${bdd}`)\r\n            .then(result => setValues(result.data))\r\n            .catch(err => console.log(err));  \r\n\r\n        }  \r\n    }, []);\r\n    \r\n    const handleChange = (changerDate) => {\r\n        setValue(type, changerDate, {\r\n          shouldDirty: true\r\n        });\r\n        setSelectedDate(changerDate);\r\n      };\r\n    if (isDate){\r\n        \r\n        return(\r\n            <div className='form-group align-parameters'  >\r\n                \r\n                <Controller\r\n                control={control}\r\n                name={type}\r\n                defaultValue={selectedDate}\r\n                render={() => (\r\n                    <DatePicker\r\n                     className='form-control col-md-12'\r\n                        selected={selectedDate}\r\n                        onChange={handleChange}\r\n                        dateFormat='dd/MM/yyyy' \r\n                        showYearDropdown\r\n                        scrollableMonthYearDropdown\r\n                        isClearable\r\n                    />\r\n                  )}\r\n                />\r\n            \r\n            </div>);\r\n        }\r\n        else{\r\n            if (isValue){\r\n                return(\r\n                        <input className='form-control align-parameters' value={valeur} name = {type} ref={register}  />\r\n                )\r\n\r\n            }\r\n            else{\r\n            return(\r\n                 <div >\r\n                     <select  className='form-control'  name={type} ref={register}>\r\n                        \r\n                         {values.map(item =>{\r\n                           return (\r\n                                    <option value={item.Valeur}>{item.Valeur}</option>\r\n                     \r\n                       \r\n                           )})}\r\n                     </select>\r\n                 </div>\r\n            )\r\n            }\r\n        }\r\n}\r\n  ","import React, {useEffect,useState,useContext}  from 'react';\r\nimport c3 from \"c3\";\r\nimport Moment from 'moment';\r\nimport 'c3/c3.css';\r\nimport axios from '../../../Authentification/AxiosInstance';\r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\n\r\n\r\nexport default function Graphe({data, procedure}){\r\n\r\n  const [user, setUser]=useContext(LoginContext);\r\n  const [dataG, setDataG]=useState([]);\r\n\r\n  useEffect(()=>{\r\n    axios(setUser).get(`/getGraph/${procedure}`)\r\n    .then(result => {setDataG(result.data)\r\n                      console.log(result)}\r\n                      )\r\n    .catch(err=>console.log(err))\r\n  },[])\r\n\r\n console.log(dataG)\r\n\r\n const traiterObj = (obj) => {\r\n    let tb_keys = [];\r\n    Object.keys(obj).map(key=>{\r\n      let key_ = key.split('_')[0];\r\n      if (!tb_keys.find((item) => { return item == key_})){\r\n        tb_keys.push(key_);\r\n      }\r\n    })\r\n\r\n    return tb_keys;   \r\n };\r\n\r\n\r\n let types={};\r\n let objChart={columns : []};\r\n let axisChart = {};\r\n let titre='';\r\n let axes={};\r\n\r\n\r\n useEffect(()=>{\r\n\r\n    let List_keys=traiterObj(dataG)\r\n    let i = -1;\r\n    List_keys.map(key=>{\r\n      if(key=='title'){\r\n        titre= dataG[key]\r\n\r\n      }\r\n       \r\n      if(dataG[key+'_visible']){\r\n        i++;\r\n        if(key.toLowerCase() ==='seance'){\r\n\r\n          objChart.columns[i] = ['x'];\r\n          objChart.x = 'x';\r\n          axisChart.x =  {\r\n            type : 'timeseries',\r\n  \r\n            tick: {\r\n              format: function (x) { return Moment(x).format('DD/MM/yyyy') }\r\n            }\r\n            \r\n          }\r\n        } \r\n        else{\r\n\r\n          objChart.columns[i] = [key];\r\n        } \r\n        \r\n        data.map(item=>{\r\n          if(key.toLowerCase() ==='seance'){\r\n\r\n            objChart.columns[i].push(Moment(item[key]).format('YYYY-MM-DD'))\r\n          } \r\n          else{\r\n            objChart.columns[i].push(item[key])\r\n          }  \r\n        })\r\n        \r\n        if(dataG[key+'_axe']=='y'){\r\n\r\n          types[key] = dataG[key+'_chart'];\r\n          axisChart.y =  {\r\n            label : {text:  dataG[key+'_label'],\r\n                     position: 'outer-middle'}\r\n            \r\n          }\r\n        }\r\n\r\n        if(dataG[key+'_axe']=='y2'){\r\n          axes[key]= dataG[key+'_axe'];\r\n          types[key] = dataG[key+'_chart'];\r\n          axisChart.y2 =  {\r\n                    show: true,\r\n                    label : {text: dataG[key+'_label'],\r\n                            position: 'outer-middle'}\r\n             \r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n    objChart.types=types;\r\n    objChart.axes=axes;\r\n\r\n  c3.generate({\r\n    bindto: \"#chart\",\r\n    data: objChart,\r\n    title :{text: titre},\r\n    axis : axisChart\r\n    \r\n  });\r\n\r\n},[data])\r\n  \r\n\r\n\r\nif(data.length){\r\n  return  <div id=\"chart\" />;\r\n}\r\nelse{\r\n  return null;\r\n}\r\n}\r\n\r\n\r\n   \r\n\r\n    \r\n\r\n\r\n \r\n\r\n    \r\n    \r\n    \r\n","import React from 'react'\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const ExportToExcel = ({ apiData, fileName }) => {\r\n  const fileType =\r\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n  const fileExtension = \".xlsx\";\r\n\r\n  const exportToCSV = (apiData, fileName) => {\r\n    const ws = XLSX.utils.json_to_sheet(apiData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n  };\r\n\r\n  return (\r\n    <button className='btn btn-success' onClick={(e) => exportToCSV(apiData, fileName)}>Exporter les données  Excel</button>\r\n  );\r\n};","import React ,{ useState, useEffect, useContext }  from 'react';\r\nimport Axios from '../../../Authentification/AxiosInstance'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../../styles/Design.css\"; \r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Parametre from \"../../Main.Administrateur/Parametre\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport Graphe  from '../../Main.Administrateur/Procedures/Graphe';\r\nimport 'c3/c3.css';\r\nimport {ExportToExcel} from '../../Main.Administrateur/ExportToExcel';\r\nimport './interface.css';\r\n\r\nexport default function Interface_utilisateur({match}){\r\n\r\n    const [data, setData]= useState({});\r\n    const [dataGraph, setDataGraph]= useState([]);\r\n    const {control, setValue, register, handleSubmit}=useForm();\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const fileName = \"Data\";\r\n\r\n\r\n\r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/Get_procedure_user/${match.params.proc}`)\r\n        .then(result => setData(result.data))\r\n        .catch(err => console.log(err));  \r\n        \r\n    }, []); \r\n\r\n\r\n    const onSubmit =(df)=>{\r\n       \r\n        Axios(setUser).post(`/set_procedure`, df)\r\n        .then (result => setDataGraph(result.data))\r\n        .catch(err => console.log(err));  \r\n    }\r\n    \r\n    \r\n     \r\n    return (\r\n        <div className=\"interface-user\"> \r\n        <form  onSubmit={handleSubmit(onSubmit)}>\r\n        <table className=\"table table-light\" >  \r\n\r\n            <tbody  >\r\n            {\r\n                \r\n                Object.keys(data).map((key ) =>{\r\n                    if(key=='bdd'){\r\n                        return(\r\n                            <input type='hidden' name='bdd' value={data[key]} ref={register} />\r\n                        )\r\n                    }\r\n                    if (key=='procedure'){\r\n                        return(\r\n                            <div >\r\n                            <h2 > {data[key]}  </h2>\r\n                            <input type=\"hidden\" value= {match.params.proc} name=\"nameProc\" ref={register}/>\r\n                            </div> \r\n                            )\r\n                    }\r\n                    if(key=='description'){\r\n                        return(\r\n                            <tr  className=\"row\">\r\n                                <th className='col-md-2'>DESCRIPTION</th>\r\n                                <td className='col-sm-7' >{data[key]} </td>  \r\n                            </tr>\r\n                        )\r\n                    }\r\n                    if (key.charAt(0)==\"@\"){\r\n                        return(\r\n                            <tr  className=\"row\"  > \r\n                                <th className='col-md-2'>{data[key]} </th>  \r\n                               <td className='col-sm-7'> <Parametre type={key} valeur={data['valeur']} requete={data['request']} register={register} setValue ={setValue} control={control} /> </td>\r\n                            </tr>)\r\n                    } \r\n                    \r\n                })\r\n            }\r\n            <div className=\"div\">\r\n                <button style={{'marginTop':'10px'}} className=\"btn btn-primary\" type=\"submit\"> Executer</button> \r\n            </div>\r\n        </tbody>\r\n          \r\n        </table>\r\n\r\n        </form>\r\n        \r\n         <div className=\"container\" style= {{\"marginTop\": \"30px \"}}>\r\n         <Graphe data={dataGraph} procedure={match.params.proc}  />\r\n    </div>\r\n    <div>\r\n      {\r\n\r\n        (dataGraph.length>0 &&  <ExportToExcel apiData={dataGraph} fileName={fileName} />) \r\n      }\r\n    </div>\r\n    \r\n    </div>\r\n        \r\n    )\r\n\r\n    \r\n    \r\n\r\n        \r\n}\r\n        \r\n    \r\n           \r\n\r\n","import React, { useState, useEffect ,  useContext } from 'react'  \r\nimport Axios from '../../Authentification/AxiosInstance';  \r\nimport 'bootstrap/dist/css/bootstrap.min.css' ;\r\nimport {Link} from \"react-router-dom\";\r\nimport {LoginContext} from '../../Authentification/LoginContext';\r\nimport './Home.procedures.css';\r\nimport '../Main.Administrateur/Fonctions/AjoutFonction.styles.css';\r\n\r\nexport default function List_procedures(){\r\n\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const [display, setDisplay]= useState(false);\r\n    const [data, setData] = useState([]);  \r\n    const [search, setSearch]=useState(\"\");\r\n    const [fct, setFct]=useState(false);\r\n    const [pcd, setPcd]=useState( false);\r\n    const [dataFct, setDataFct]=useState([]);\r\n    const [allData, setAllData]=useState([]);\r\n    const [bdd,setBDD]=useState([]);\r\n    const [baseDD, setBaseDD]=useState('APP_WEB_DATA');\r\n    \r\n\r\n    useEffect(()=>{\r\n        Axios(setUser).get('/BDD')\r\n        .then (result =>setBDD(result.data))\r\n        .catch(err => console.log(err));  \r\n    }, []);   \r\n\r\n    useEffect(() => {  \r\n         Axios(setUser).get(`/appFonction/${baseDD}`)\r\n         .then(resultat => {setDataFct(resultat.data)})\r\n        .catch(err => console.log(err));  \r\n    }, [baseDD]);  \r\n        \r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/appProcedure/${baseDD}`)\r\n        .then(result => {setData(result.data)})\r\n        .catch(err => console.log(err));  \r\n    }, [baseDD]);  \r\n    \r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/allData/${baseDD}`)\r\n        .then(resultat => {\r\n            setAllData(resultat.data)})\r\n        .catch(err => console.log(err));  \r\n    }, [baseDD]);  \r\n        \r\n    const onChangeBDD=(e)=>{\r\n       setBaseDD(e.target.value)\r\n    }\r\n\r\n    const setResult = p=>{\r\n        setSearch(p);\r\n        setDisplay(false);\r\n    }\r\n    \r\n    const handleChange=(e)=>{\r\n        setPcd(e.target.checked)\r\n    }\r\n\r\n    const handleChange2=(e)=>{\r\n        setFct(e.target.checked)\r\n    }\r\n    \r\n        \r\n    \r\n    return(\r\n        <div>\r\n            {(user.role=='admin')&&\r\n           <div className=\"div2\">\r\n                <Link to={'/Affichage'}>\r\n                    <button className=\"bouton\" >Affichage</button>\r\n                </Link>\r\n                <Link to= {'/AjoutProcedure'}>\r\n                    <button className=\"bouton2\">Ajouter une procédure</button>\r\n                </Link >\r\n                <Link to= {'/ajoutFonction'}>\r\n                    <button className=\"bouton3\">Ajouter une fonction</button>\r\n                </Link>\r\n                <Link to={'/'}>\r\n                    <button className=\"search-btn\">Recherche</button>\r\n                </Link>\r\n                        \r\n            </div>\r\n            }\r\n            <div className='div3' >\r\n            {(user.role=='admin')&&\r\n            <div  >\r\n                \r\n                <div >\r\n                <div className=\"form-group row\">\r\n                    <div className='col-md-2'>\r\n                        <label  for=\"bdd\">Base de données  </label>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <select className=\"form-control\"  name = 'bdd'  onChange={onChangeBDD}>\r\n                            {bdd.map(item =>{\r\n                                return (\r\n                                    <option value={item.bdd}>{item.bdd}</option>\r\n                            )})}\r\n                        </select>         \r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            }\r\n            <div>\r\n            <div className=' div5 row' >\r\n            \r\n                \r\n              <input className='checkbox1'   type='checkbox' name='procedure'  value={pcd}  onChange={handleChange}/>  \r\n              <label >Procédures</label>\r\n\r\n            \r\n                <input className='checkbox2'  type='checkbox' name='fonction' value={fct}   onChange={handleChange2} />  \r\n                <label  > Fonctions</label>\r\n\r\n\r\n            </div>\r\n            <div style={{'width':'66%'}}>\r\n                { (pcd && !fct) &&(\r\n                    <div className=\"list-group\">\r\n                    <input id=\"auto\" \r\n                            type=\"text\"\r\n                            placeholder=\"Chercher une procédure.....\"\r\n                            onClick={()=> setDisplay(!display)}\r\n                            value={search}\r\n                            onChange={(event) => setSearch(event.target.value)}/>\r\n\r\n                    {display &&  (\r\n                            <div  className=\"list-group\" >\r\n                            {data\r\n                            .filter(({P})=>P.toLowerCase().indexOf(search.toLowerCase())>-1)\r\n                            .sort((a, b) => a.P> b.P? 1 : -1)\r\n                            .map(item =>{\r\n                                if(user.role=='admin'){\r\n                                    return (\r\n\r\n                                        <div  onClick={()=> setResult(item.P)}>\r\n                                        <Link to={`/Details_procedure/${item.P}/${baseDD}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.P}> {item.P}</Link>\r\n                                        \r\n                                        </div>\r\n                                        \r\n                                    )\r\n                                    \r\n                                }\r\n                                else{\r\n                                    return (\r\n                                        <div  onClick={()=> setResult(item.P)}>\r\n                                        <Link to={`/Interface_utilisateur/${item.P}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.P} > {item.P}</Link>\r\n                                        </div>\r\n                                    )\r\n\r\n                                }\r\n                                \r\n                        })\r\n                        }\r\n                        </div>\r\n                    )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div style={{'width':'66%'}}>\r\n            { (fct && !pcd) &&(\r\n                <div className=\"list-group\">\r\n                    <input   id=\"auto\" \r\n                            type=\"text\"\r\n                            placeholder=\"Chercher une fonction.....\"\r\n                            onClick={()=> setDisplay(!display)}\r\n                            value={search}\r\n                            onChange={(event) => setSearch(event.target.value)}/>\r\n\r\n                    {display &&  (\r\n                            <div  className=\"list-group\" >\r\n                            {dataFct\r\n                            .filter(({F})=>F.toLowerCase().indexOf(search.toLowerCase())>-1)\r\n                            .sort((a, b) => a.F> b.F? 1 : -1)\r\n                            .map(item =>{\r\n                                if(user.role=='admin'){\r\n                                    return (\r\n\r\n                                        <div  onClick={()=> setResult(item.F)}>\r\n                                        <Link to={`/Details_fonction/${item.F}/${baseDD}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.F}> {item.F}</Link>\r\n                                        \r\n                                        </div>\r\n                                        \r\n                                    )\r\n                                    \r\n                                }\r\n                                else{\r\n                                    return (\r\n                                        <div  onClick={()=> setResult(item.F)}>\r\n                                        <Link to={`/Interface_utilisateur2/${item.F}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.F} > {item.F}</Link>\r\n                                        </div>\r\n                                    )\r\n\r\n                                }\r\n                                \r\n                        })\r\n                    }\r\n                </div>\r\n                    )}\r\n                \r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div style={{'width':'66%'}} >\r\n                { (fct && pcd) &&(\r\n                    <div className=\"list-group\">\r\n                        <input  id=\"auto\" \r\n                            type=\"text\"\r\n                            placeholder=\"Chercher.....\"\r\n                            onClick={()=> setDisplay(!display)}\r\n                            value={search}\r\n                            onChange={(event) => setSearch(event.target.value)}/>\r\n                        {display &&  (\r\n                            <div>\r\n                            <div  className=\"list-group\" >\r\n                            {allData\r\n                            .map(item =>{\r\n                                if(item.P){\r\n                                    if(user.role=='admin'){\r\n                                        return (\r\n                                            <div>\r\n                                            \r\n                                                <div  onClick={()=> setResult(item.P)}>\r\n                                                <Link to={`/Details_procedure/${item.P}/${baseDD}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.P}> {item.P}</Link>\r\n                                                \r\n                                                </div>\r\n                                            </div>    \r\n                                        )}\r\n                                    else{\r\n                                        return (\r\n                                            <div  onClick={()=> setResult(item.P)}>\r\n                                            <Link to={`/Interface_utilisateur/${item.P}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.P}> {item.P}</Link>\r\n                                            </div>\r\n                                        )}\r\n                                }\r\n                                else{\r\n                                    if(user.role=='admin'){\r\n                                        return (\r\n    \r\n                                            <div  onClick={()=> setResult(item.F)}>\r\n                                            <Link to={`/Details_fonction/${item.F}/${baseDD}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.F}> {item.F}</Link>\r\n                                            \r\n                                            </div>\r\n                                            \r\n                                        )\r\n                                        \r\n                                    }\r\n                                    else{\r\n                                        return (\r\n                                            <div  onClick={()=> setResult(item.F)}>\r\n                                            <Link to={`/Interface_utilisateur2/${item.F}`} className=\"list-group-item  list-group-item-action list-group-item-light \" style={{\"color\":\"black\"}} key={item.F}> {item.F}</Link>\r\n                                            </div>\r\n                                        )\r\n    \r\n                                    }\r\n\r\n                                }        \r\n                            })\r\n                            }\r\n                            </div>\r\n                          \r\n                           </div> \r\n                        \r\n                        )}    \r\n                    </div>\r\n                )\r\n                }\r\n            </div>\r\n            </div>\r\n        </div>\r\n       </div>\r\n       \r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport {LoginContext} from '../Authentification/LoginContext';\r\n\r\n\r\nexport default function Permissions(roles){\r\n    const [user,setUser]=useContext(LoginContext);\r\n    if (user.isLoggedIn){\r\n        if(user.role==roles ){\r\n            return true;\r\n        }\r\n\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n\r\n\r\n\r\n}","import React from 'react'\r\nimport Permissions from './Permissions';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nexport default function ProtectedRoutes({component: Component,role, ...rest}){\r\n    \r\n    return(\r\n        <>\r\n        {Permissions(role) && (\r\n            <Route\r\n            {...rest}\r\n            render={(props) => (\r\n              <>\r\n                <Component {...props} />\r\n              </>\r\n            )}\r\n          />\r\n        )}\r\n\r\n        {!Permissions(role) && (\r\n          <Route\r\n            render={() => (\r\n              <>\r\n                <Redirect to='/' /> \r\n              </>\r\n            )}\r\n          />\r\n        )\r\n        }\r\n\r\n       </> \r\n    )\r\n\r\n\r\n\r\n    \r\n}","import React, {useState,useEffect, useContext} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport Axios from '../../../Authentification/AxiosInstance';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../../styles/Design.css\";\r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Parametre from '../Parametre';\r\nimport './procedures.css';\r\n\r\nexport default function GrapheParametre({match}){\r\n\r\n    const [user, setUser]=useContext(LoginContext);\r\n    const {control, setValue, register, handleSubmit}=useForm();\r\n    const { register: register2, handleSubmit: handleSubmit2}=useForm();\r\n    const [data, setData]= useState({});\r\n    const [graph, setGraph]= useState([]);\r\n    const [chartData, setChartData]=useState({});\r\n    const [bdd, setBDD]=useState([]);\r\n\r\n    \r\n        \r\n    const onChartSubmit =(chartData)=>{\r\n        Axios(setUser).post(`/setGraph/${match.params.proc}`, chartData)\r\n        .then (result => {setChartData(result.data)\r\n                           console.log(result.data)})\r\n        .catch(err => console.log(err));  \r\n    }\r\n\r\n    useEffect(()=>{\r\n        Axios(setUser).get('/BDD')\r\n        .then (result => setBDD(result.data))\r\n        .catch(err => console.log(err));  \r\n        \r\n    },[])\r\n\r\n    const onSubmit =(df)=>{\r\n        Axios(setUser).post(`/set_procedure/`, df)\r\n        .then (result => {\r\n            setGraph(result.data[0]);\r\n        })\r\n        .catch(err => console.log(err));  \r\n    }\r\n\r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/Get_values/${match.params.proc}`)\r\n        .then(result => {\r\n            if(result.data.type=='procedure'){\r\n                setData(result.data.content)\r\n            }\r\n            else{\r\n                setGraph(corrigerGraphe(result.data.content))\r\n            }\r\n\r\n        })\r\n        .catch(err => console.log(err));  \r\n        \r\n    }, []);\r\n\r\n    const corrigerGraphe=(obj)=>{\r\n        Object.keys(obj).map(item=>{\r\n            if(item.indexOf('_visible' )>0){\r\n                if(obj[item]=='true'){\r\n                    obj[item]=true\r\n                }\r\n                else{\r\n                    obj[item]=false\r\n                }\r\n            }\r\n        })\r\n        return obj;\r\n    }\r\n\r\n    const options=[\r\n        {value:'null',label:'null'},\r\n        {value:'line', label:'Line chart'},\r\n        {value:'bar', label:'Bar chart'},\r\n        {value:'timeseries ', label:'Timeseries Chart'},\r\n        {value:'spline', label:'Spline Chart'},\r\n        {value:'area-spline', label:' area Spline Chart'},\r\n        {value:'step', label:'Area Chart'},\r\n        {value:'area-step', label:'Area Step Chart'},\r\n        {value:'scatter ', label:'Scatter Plot'},\r\n        {value:'pie', label:'Pie Chart'},\r\n        {value:'donut', label:'Donut Chart'}\r\n        ]\r\n\r\n    const values=[\r\n        {value:'null',label:'null'},\r\n        {value:'x',label:'x'},\r\n        {value:'y',label:'y'},\r\n        {value:'y2',label:'y2'}\r\n    ]\r\n    \r\n    const traiterObj = (obj) => {\r\n        let tb_keys = [];\r\n        Object.keys(obj).map(key=>{\r\n          let key_ = key.split('_')[0];\r\n          if (!tb_keys.find((item) => { return item == key_})){\r\n            if(key_!='title'){\r\n                tb_keys.push(key_);\r\n\r\n            }\r\n          }\r\n        })\r\n    \r\n        return tb_keys;   \r\n     };\r\n    \r\n     const handleChange = e =>{\r\n        const {name, value }=e.target;\r\n        setGraph (prevUser => ({\r\n            ...prevUser,\r\n            [name] :value\r\n        }));\r\n\r\n    }\r\n\r\n    const handleChangeCheckbox = e =>{\r\n        const {name, checked }=e.target;\r\n        setGraph (prevUser => ({\r\n            ...prevUser,\r\n            [name] :checked\r\n        }));\r\n\r\n    }\r\n\r\n    \r\n\r\n      \r\n    const items=traiterObj(graph)\r\n    console.log('result',graph)\r\n    console.log('data',data)\r\n    console.log('item',items)\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"graphe-param\"> \r\n        {(!Object.keys(graph).length) &&\r\n         <form key={1} onSubmit={handleSubmit(onSubmit)}>\r\n             <div  >\r\n             { \r\n                 \r\n                 Object.keys(data).map((key ) =>{\r\n                     if (key=='procedure'){\r\n                         return (\r\n                             \r\n                             <div >\r\n                             <h2 > {data[key]}  </h2>\r\n                             <input type=\"hidden\" value= {match.params.proc} name=\"nameProc\" ref={register}/>\r\n                             </div> \r\n                             ) \r\n                     }\r\n                    if(key=='bdd'){\r\n                         return(\r\n                             <input type='hidden' value={data[key]} name='bdd' ref={register} />\r\n                        )\r\n                    }\r\n                     if (key.charAt(0)==\"@\"){\r\n                         return(\r\n                             <div className=\"row\"  > \r\n                                 <label className='col-md-1'>{data[key]}</label> \r\n                                 <Parametre  type={key} bdd={data['bdd']} valeur={data['valeur']} requete={data['request']} register={register} setValue ={setValue} control={control} />\r\n                             </div>)\r\n                     } \r\n                     \r\n                 })\r\n             }\r\n             <div >\r\n                 <button style={{'marginTop':'10px'}} className=\"btn btn-primary\" type=\"submit\"> Executer</button> \r\n             </div>\r\n            \r\n         </div>\r\n         </form>\r\n        }\r\n        {(Object.keys(graph).length>0)  && (\r\n\r\n            <form key={2} onSubmit={handleSubmit2(onChartSubmit)} >\r\n                <h2>Paramétrage du graphe</h2>\r\n                <table className=\" table table2 table-bordered \" > \r\n                \r\n                <tr className=\"form-group\" >\r\n                        <th>Titre</th>\r\n                        <td colSpan='4'>\r\n                            <input className='form-control' onChange={handleChange} name='title' autoComplete='off' value={graph['title']} placeholder='Nom du graphe' ref={register2}/>\r\n                        </td>\r\n                </tr> \r\n                    \r\n                {traiterObj(graph).map(key =>{\r\n                    return(\r\n                    \r\n                    <tr className='form-group' >\r\n                       <th>{key}</th>\r\n                       <td >\r\n                        <input style={{'marginLeft':'1px', 'marginRight':'1px'}} onChange={handleChangeCheckbox} className=\"  form-check-input\" type=\"checkbox\"  name={key+'_visible'} value={graph[key+'_visible']} defaultChecked={graph[key+'_visible']} ref={register2}  />\r\n                        <label style={{'marginLeft':'10px'}} className='col-md-2'>Visible</label>\r\n\r\n                       </td> \r\n                       \r\n                       <td>\r\n                           <input className='form-control' onChange={handleChange} autoComplete='off' placeholder='Label' name={key+'_label'} value={graph[key+'_label']} ref={register2} />\r\n                       </td>\r\n                       <td>\r\n                            <select className='form-control' onChange={handleChange} name ={key + '_chart'} value={graph[key+'_chart']} ref={register2}>\r\n                                {options.map(item =>{\r\n                                return (\r\n                                        <option value={item.value}>{item.value}</option>\r\n                            \r\n                            \r\n                                )})}\r\n                            </select> \r\n                       </td>\r\n                       \r\n                       \r\n                       <td>\r\n                            <select  className='form-control' onChange={handleChange} name={key+'_axe'} value={graph[key+'_axe']} ref={register2}>\r\n                                {values.map(item =>{\r\n                                return (\r\n                                        <option value={item.value}>{item.value}</option>\r\n                                )})}\r\n                            </select> \r\n                       </td>\r\n                    </tr> )\r\n                })\r\n                } \r\n                </table>\r\n                <div className=\"div\">\r\n                    <button onClick={()=> alert('Opération réussie')} className=\"btn btn-primary\" type=\"submit\"> Enregistrer</button> \r\n                </div>\r\n            </form>\r\n        )}\r\n         \r\n       </div> \r\n    )\r\n}\r\n \r\n\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useContext,useState,useEffect} from 'react';\r\nimport {LoginContext} from '../Authentification/LoginContext';\r\nimport Axios from '../Authentification/AxiosInstance'; \r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css' ;\r\n\r\n\r\nexport default function Lister_utilisateurs(){\r\n\r\n    const [listUser, setListUser]=useState([]);\r\n    const [user,setUser]=useContext(LoginContext);\r\n\r\n    useEffect(() => {\r\n        Axios(setUser).get('/list_users')\r\n        .then(result => setListUser(result.data))\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n    \r\n    \r\n   \r\n    \r\n    return(\r\n        <div style={{'marginTop':'30px'}} className=\" div3  \">\r\n            <div className='row'>\r\n            <h2 style={{'marginLeft':'10px'}}>Membres</h2> \r\n            <Link to={`/Utilisateurs`}>\r\n                <button style={{'marginLeft':'30px'}} type=\"button\" class=\"btn btn-primary\"> Ajouter un membre</button>\r\n            </Link>\r\n            </div>\r\n            <table className=\"table table-bordered \" style={{'marginTop':'30px', 'width': '90%'}}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Nom utilisateur</th>\r\n                        <th>Identifiant</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    { listUser.map(item=>{\r\n                        return (\r\n                            \r\n                                <tr>\r\n                                    <td>{item.nom_utilisateur}</td>\r\n                                     <td >{item.identifiant}</td>\r\n                                     <td>\r\n                                     <Link to={`/Utilisateurs/${item.ID}`}>\r\n                                            <button style={{'marginLeft':'30px'}} type=\"button\" class=\"btn btn-primary\">\r\n                                                Editer\r\n                                            </button>\r\n                                    </Link>\r\n                                   \r\n                                    \r\n                                    </td>\r\n                                    \r\n                                   \r\n                                    \r\n                                </tr>    \r\n                         \r\n                            )\r\n                        })\r\n                        }\r\n                    \r\n                </tbody> \r\n            </table>\r\n\r\n           \r\n        </div>\r\n    )\r\n\r\n\r\n\r\n\r\n}","import React, { useState ,useEffect, useContext } from 'react' ; \r\nimport {useForm} from \"react-hook-form\";\r\nimport {Link} from 'react-router-dom';\r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Axios from '../../../Authentification/AxiosInstance'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Fonctions/AjoutFonction.styles.css';\r\n\r\nexport default function AjoutProcedure(){\r\n    const {register, handleSubmit}= useForm();\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const [bdd, setBDD]=useState([]);\r\n    \r\n\r\n    \r\n    useEffect(()=>{\r\n        Axios(setUser).get('/BDD')\r\n        .then (result =>setBDD(result.data))\r\n        .catch(err => console.log(err));  \r\n        \r\n    },[])\r\n\r\n    const onSubmit = (formData)=>{\r\n        Axios(setUser).post(`/AjoutProcedure`, formData)\r\n        .then (result => console.log(result))\r\n        .catch(err => console.log(err));  \r\n    }\r\n\r\n    \r\n    return(\r\n        \r\n        <div  >\r\n            <div className=\"div2 \">\r\n                <Link to={'/Affichage'}>\r\n                    <button className=\"bouton\" >Affichage</button>\r\n                </Link>\r\n                <Link to= {'/AjoutProcedure'}>\r\n                    <button className=\"bouton2\">Ajouter une procédure</button>\r\n                </Link >\r\n                <Link to= {'/ajoutFonction'}>\r\n                    <button className=\"bouton3\">Ajouter une fonction</button>\r\n                </Link>\r\n                <Link to={'/'}>\r\n                    <button className=\"search-btn\">Recherche</button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"div3\">\r\n   \r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className='form-group row'>\r\n                <div  className='col-md-2'>\r\n                    <label  for=\"nameproc\"> Nom Procédure </label>\r\n                </div>\r\n                <div className=\"col-sm-9\">\r\n                    <input autoComplete='off' type=\"text\" className=\"form-control\" id=\"nameproc\" name='name'  placeholder=\"Insérer le nom de la procédure \" ref={register}/>\r\n                </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className='col-md-2'>\r\n                    <label for=\"bdd\">Base de données  </label>\r\n                    </div>\r\n                    <div className=\"col-sm-9\">\r\n                    <select  className=\"form-control\" name ='bdd' ref={register}>\r\n                        {bdd.map(item =>{\r\n                          return (\r\n                                   <option value={item.bdd}>{item.bdd}</option>\r\n                          )})}\r\n                    </select>\r\n                    </div>\r\n                       \r\n                </div>\r\n                \r\n               \r\n                \r\n                <div class=\"form-group row\">\r\n                <div className='col-md-2'>\r\n\r\n                    <label for=\"proc\">Requête SQL</label>\r\n                    </div>\r\n                <div className=\"col-sm-9\">\r\n\r\n                    <textarea autoComplete='off' type=\"text\" className=\"form-control\" id=\"proc\" name='procedure' placeholder=\"Insérer la requête \" ref={register}></textarea>\r\n                </div>\r\n                </div>\r\n        \r\n                <button onClick={()=>alert('Opération réussie')} type=\"submit\" className=\" btn1 btn btn-primary\">Enregistrer</button>\r\n          \r\n            </form>\r\n            </div>\r\n\r\n           \r\n        </div>\r\n    )\r\n\r\n}\r\n","import React, { useState, useEffect , useContext } from 'react' ; \r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Axios from '../../../Authentification/AxiosInstance'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../../styles/Design.css\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Details_fonction({match}){\r\n    const {register, handleSubmit}= useForm();\r\n    const [data, setData] = useState({parameters : []});  \r\n    const [user,setUser]=useContext(LoginContext);\r\n\r\n  \r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/page_fct/${match.params.name}/${match.params.baseDD}`)\r\n        .then(result => setData(result.data))\r\n        .catch(err => console.log(err));  \r\n          \r\n    }, []); \r\n    \r\n    \r\n    \r\n    const onSubmit = (formData)=>{\r\n        Axios(setUser).post(`/set_data_fct/${match.params.name}/${match.params.baseDD}`, formData)\r\n        .then (result => console.log(result))\r\n        .catch(err => console.log(err));  \r\n        console.log(JSON.stringify(formData))\r\n\r\n    }\r\n    return(\r\n        <div >\r\n            \r\n        <form   className=\"container\" onSubmit={handleSubmit(onSubmit)}> \r\n        <h2 style={{'marginTop': '10px', 'marginBottom':'20px'}} > Métadonnées de la  fonction {data.SP_NAME} </h2>\r\n\r\n        <table className=\"table table-bordered\" >  \r\n        \r\n            <tbody>\r\n                <tr>\r\n                    <input type=\"hidden\" value= {match.params.baseDD} name=\"bdd\" ref={register}/>\r\n                   <th>NOM DE LA FONCTION</th> \r\n                   <td>\r\n                    <input className='form-control col-sm-11' name=\"procedure\" autoComplete=\"off\"  type=\"text\" placeholder=\"Renommer\" ref={register}/>  \r\n\r\n                   </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>NOM DE LA BDD</th> \r\n                    <td>{data.DATABASE}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>SCHEMA</th>  \r\n                    <td>{data.SCHEMA}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>DESCRIPTION</th>  \r\n                   <td>\r\n                   <textarea className='form-control col-sm-11' name=\"description\" autoComplete=\"off\"  type=\"text\"  placeholder=\"Ajouter une description\" ref={register} ></textarea> \r\n                   </td>\r\n                </tr>\r\n                <tr>\r\n                   <th>NOM DE L'AUTEUR</th>\r\n                   <td>{data.Author_name}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>DATE DE CREATION</th> \r\n                   <td>{data.CREATE_DATE}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>DATE DE MODIFICATION</th> \r\n                   <td>{data.MODIFY_DATE}</td>\r\n                </tr>\r\n                <tr>\r\n                   <th>PARAMETRES</th> \r\n                   <td >\r\n                       {data.parameters.map(item =>{\r\n                           if (item.DATA_TYPE==='date'){\r\n                            return (\r\n                                    <div className='parameter-border' > \r\n                                        <p className='row'>\r\n                                        <label className=\"col-md-2\" >{item.PARAMETER_NAME}</label>\r\n                                        <input  className='form-control col-sm-9' name={item.PARAMETER_NAME} autoComplete=\"off\"  type=\"text\" placeholder=\"Renommer\" ref={register}/>\r\n                                        </p>\r\n                                    </div>\r\n                                     \r\n                            );}\r\n                            if (item.DATA_TYPE==='varchar') {\r\n                                return(\r\n                                    <div className='parameter-border'>\r\n                                        <p className='row' >\r\n                                            <label className=\"col-md-2\">{item.PARAMETER_NAME}</label>\r\n                                            <input   className='form-control col-sm-9'  autoComplete=\"off\" name={item.PARAMETER_NAME} type=\"text\" placeholder=\"Renommer\" ref={register}/>\r\n                                        </p>\r\n                                        <p className='row'>\r\n                                            <label className=\"col-md-2\"></label>\r\n                                            <input className='form-control col-sm-9' autoComplete='OFF' placeholder='insérer une valeur' name='valeur' type='text' ref={register}/>\r\n                                            \r\n                                        </p>\r\n                                        <p className='row'>\r\n                                            <label className=\"col-md-2\">OU</label>\r\n                                            <textarea className='form-control col-sm-9'   autoComplete=\"off\" placeholder=\" insérer une requête\" name=\"request\" type=\"text\" ref={register}></textarea>\r\n                                        </p>\r\n                                    </div>\r\n                                );\r\n                            }\r\n                       })}</td>\r\n                </tr>\r\n            </tbody>\r\n           </table> \r\n            <div className=\" container row \"  style={{'marginBottom':'60px'}}> \r\n            <button style={{'marginLeft':'400px'}} onClick={()=> alert('Opération réussie')} className=\"btn btn-primary\" type=\"submit\"> Enregistrer</button>\r\n            <Link to= {`/GrapheParametresFct/${data.SP_NAME} `}> \r\n                <button style={{'marginLeft':'30px'}} className=\"btn btn-info\" > Paramétrer le graphe</button> \r\n            </Link>\r\n            </div>\r\n           \r\n        </form> \r\n        \r\n        </div> \r\n        \r\n        )\r\n}","import React, {useState,useEffect, useContext} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\nimport Axios from '../../../Authentification/AxiosInstance';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../../styles/Design.css\";\r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Parametre from '../Parametre';\r\nimport '../Procedures/procedures.css';\r\n\r\nexport default function GrapheParametreFct({match}){\r\n\r\n    const [user, setUser]=useContext(LoginContext);\r\n    const {control, setValue, register, handleSubmit}=useForm();\r\n    const { register: register2, handleSubmit: handleSubmit2}=useForm();\r\n    const [data, setData]= useState({});\r\n    const [graph, setGraph]= useState([]);\r\n    const [chartData, setChartData]=useState({});\r\n    const [bdd, setBDD]=useState([])\r\n\r\n    \r\n    useEffect(()=>{\r\n        Axios(setUser).get('/BDD')\r\n        .then (result => setBDD(result.data))\r\n        .catch(err => console.log(err));  \r\n        \r\n    },[])\r\n        \r\n    const onChartSubmit =(chartData)=>{\r\n        Axios(setUser).post(`/setGraphFct/${match.params.fct}`, chartData)\r\n        .then (result => {setChartData(result.data)\r\n                           console.log(chartData)\r\n                           console.log(result)})\r\n        .catch(err => console.log(err));  \r\n    }\r\n\r\n    \r\n\r\n    const onSubmit =(df)=>{\r\n\r\n       console.log('df',df)\r\n        Axios(setUser).post(`/set_function/`, df)\r\n        .then (result => {\r\n            setGraph(result.data[0]);\r\n        })\r\n        .catch(err => console.log(err));  \r\n    }\r\n\r\n    \r\n    \r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/Get_values_fct/${match.params.fct}`)\r\n        .then(result => {\r\n            if(result.data.type=='function'){\r\n                setData(result.data.content)\r\n            }\r\n            else{\r\n                setGraph(corrigerGraphe(result.data.content))\r\n            }\r\n\r\n        })\r\n        .catch(err => console.log(err));  \r\n        \r\n    }, []);\r\n\r\n    const corrigerGraphe=(obj)=>{\r\n        Object.keys(obj).map(item=>{\r\n            if(item.indexOf('_visible' )>0){\r\n                if(obj[item]=='true'){\r\n                    obj[item]=true\r\n                }\r\n                else{\r\n                    obj[item]=false\r\n                }\r\n            }\r\n        })\r\n        return obj;\r\n    } \r\n\r\n    const options=[\r\n        {value:'null',label:'null'},\r\n        {value:'line', label:'Line chart'},\r\n        {value:'bar', label:'Bar chart'},\r\n        {value:'timeseries ', label:'Timeseries Chart'},\r\n        {value:'spline', label:'Spline Chart'},\r\n        {value:'area-spline', label:' area Spline Chart'},\r\n        {value:'step', label:'Area Chart'},\r\n        {value:'area-step', label:'Area Step Chart'},\r\n        {value:'scatter ', label:'Scatter Plot'},\r\n        {value:'pie', label:'Pie Chart'},\r\n        {value:'donut', label:'Donut Chart'}\r\n        ]\r\n\r\n    const values=[\r\n        {value:'null',label:'null'},\r\n        {value:'x',label:'x'},\r\n        {value:'y',label:'y'},\r\n        {value:'y2',label:'y2'}\r\n    ]\r\n    const traiterObj = (obj) => {\r\n        let tb_keys = [];\r\n        Object.keys(obj).map(key=>{\r\n          let key_ = key.split('_')[0];\r\n          if (!tb_keys.find((item) => { return item == key_})){\r\n            if(key_!='title'){\r\n                tb_keys.push(key_);\r\n\r\n            }\r\n          }\r\n        })\r\n    \r\n        return tb_keys;   \r\n     };\r\n    \r\n     const handleChange = e =>{\r\n        const {name, value }=e.target;\r\n        setGraph (prevUser => ({\r\n            ...prevUser,\r\n            [name] :value\r\n        }));\r\n\r\n    }\r\n\r\n    const handleChangeCheckbox = e =>{\r\n        const {name, checked }=e.target;\r\n        setGraph (prevUser => ({\r\n            ...prevUser,\r\n            [name] :checked\r\n        }));\r\n\r\n    }\r\n\r\n    console.log('result',graph)\r\n\r\n    return (\r\n        <div className=\"graphe-param\"> \r\n        {(Object.keys(graph).length==0) &&\r\n         <form key={1} onSubmit={handleSubmit(onSubmit)}>\r\n             <div  >\r\n             { \r\n                 \r\n                 Object.keys(data).map((key ) =>{\r\n                     if (key=='procedure'){\r\n                         return (\r\n                             \r\n                             <div >\r\n                             <h2 > {data[key]}  </h2>\r\n                             <input type=\"hidden\" value= {match.params.fct} name=\"nameProc\" ref={register}/>\r\n                             </div> \r\n                             )\r\n                     }\r\n                     if(key=='bdd'){\r\n                        return(\r\n                            <input type='hidden' value={data[key]} name='bdd' ref={register} />\r\n                       )\r\n                    }\r\n                     if (key.charAt(0)==\"@\"){\r\n                         return(\r\n                            <div className=\"row\"  > \r\n                                <label className='col-md-1'>{data[key]}</label> \r\n                                <Parametre  type={key} bdd={data['bdd']} valeur={data['valeur']} requete={data['request']} register={register} setValue ={setValue} control={control} />\r\n                            </div>)\r\n                     } \r\n                     \r\n                 })\r\n             }\r\n             <div >\r\n                 <button style={{'marginTop':'10px'}} className=\"btn btn-primary\" type=\"submit\"> Executer</button> \r\n             </div>\r\n            \r\n         </div>\r\n         </form>\r\n        }\r\n         {(Object.keys(graph).length>0) && (\r\n             \r\n            <form key={2} onSubmit={handleSubmit2(onChartSubmit)} >\r\n                <h2>Paramétrage du graphe</h2>\r\n                <table className=\" table table2 table-bordered \" > \r\n                \r\n                <tr className=\"form-group\" >\r\n                        <th>Titre</th>\r\n                        <td colspan='4'>\r\n                            <input className='form-control' name='title' onChange={handleChange} value={graph['title']}  autoComplete='off' placeholder='Nom du graphe' ref={register2}/>\r\n                        </td>\r\n                </tr> \r\n                    \r\n                {traiterObj(graph).map(key =>{\r\n                    return(\r\n                    \r\n                    <tr className='form-group' >\r\n                        <th>{key}</th>\r\n                       <td>\r\n                        <input style={{'marginLeft':'1px', 'marginRight':'1px'}}class=\"form-check-input\" type=\"checkbox\" onChange={handleChangeCheckbox} value={graph[key+'_visible']} defaultChecked={graph[key+'_visible']}  name={key+'_visible'}  ref={register2}  />\r\n                        <label style={{'marginLeft':'10px'}} className='col-md-2'>Visible</label>\r\n\r\n                       </td> \r\n                       \r\n                       <td>\r\n                           <input className='form-control' onChange={handleChange} autoComplete='off' placeholder='Label' name={key+'_label'} value={graph[key+'_label']} ref={register2} />\r\n\r\n                       </td>\r\n                       <td>\r\n                            <select className='form-control' onChange={handleChange} value={graph[key+'_chart']} name ={key + '_chart'} ref={register2}>\r\n                                {options.map(item =>{\r\n                                return (\r\n                                        <option value={item.value}>{item.value}</option>\r\n                            \r\n                            \r\n                                )})}\r\n                            </select> \r\n                       </td>\r\n                       \r\n                       \r\n                       <td>\r\n                            <select className='form-control' onChange={handleChange} value={graph[key+'_axe']} name={key+'_axe'} ref={register2}>\r\n                                {values.map(item =>{\r\n                                return (\r\n                                        <option value={item.value}>{item.value}</option>\r\n                                )})}\r\n                            </select> \r\n                       </td>\r\n                    </tr> )\r\n                })\r\n                } \r\n                </table>\r\n                <div className=\"div\">\r\n                    <button onClick={()=> alert('Opération réussie')} className=\"btn btn-primary\" type=\"submit\"> Enregistrer</button> \r\n                </div>\r\n            </form>\r\n        )}\r\n         \r\n       </div> \r\n    )\r\n}\r\n \r\n\r\n\r\n\r\n    \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect,useState,useContext}  from 'react';\r\nimport c3 from \"c3\";\r\nimport Moment from 'moment';\r\nimport 'c3/c3.css';\r\nimport axios from '../../../Authentification/AxiosInstance';\r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\n\r\n\r\nexport default function GrapheFct({data, fonction}){\r\n\r\n  const [user, setUser]=useContext(LoginContext);\r\n  const [dataG, setDataG]=useState([]);\r\n\r\n  useEffect(()=>{\r\n    axios(setUser).get(`/getGraphFct/${fonction}`)\r\n    .then(result => {setDataG(result.data)\r\n                      console.log(result)}\r\n                      )\r\n    .catch(err=>console.log(err))\r\n  },[])\r\n\r\n console.log(dataG)\r\n\r\n const traiterObj = (obj) => {\r\n    let tb_keys = [];\r\n    Object.keys(obj).map(key=>{\r\n      let key_ = key.split('_')[0];\r\n      if (!tb_keys.find((item) => { return item == key_})){\r\n        tb_keys.push(key_);\r\n      }\r\n    })\r\n\r\n    return tb_keys;   \r\n };\r\n\r\n\r\n let types={};\r\n let objChart={columns : []};\r\n let axisChart = {};\r\n let titre='';\r\n let axes={};\r\n\r\n\r\n useEffect(()=>{\r\n\r\n    let List_keys=traiterObj(dataG)\r\n    let i = -1;\r\n    List_keys.map(key=>{\r\n      if(key=='title'){\r\n        titre= dataG[key]\r\n\r\n      }\r\n       \r\n      if(dataG[key+'_visible']){\r\n        i++;\r\n        if(key.toLowerCase() ==='seance'){\r\n\r\n          objChart.columns[i] = ['x'];\r\n          objChart.x = 'x';\r\n          axisChart.x =  {\r\n            type : 'timeseries',\r\n  \r\n            tick: {\r\n              format: function (x) { return Moment(x).format('DD/MM/yyyy') }\r\n            }\r\n            \r\n          }\r\n        } \r\n        else{\r\n\r\n          objChart.columns[i] = [key];\r\n        } \r\n        \r\n        data.map(item=>{\r\n          if(key.toLowerCase() ==='seance'){\r\n\r\n            objChart.columns[i].push(Moment(item[key]).format('YYYY-MM-DD'))\r\n          } \r\n          else{\r\n            objChart.columns[i].push(item[key])\r\n          }  \r\n        })\r\n        \r\n        if(dataG[key+'_axe']=='y'){\r\n\r\n          types[key] = dataG[key+'_chart'];\r\n          axisChart.y =  {\r\n            label : {text:  dataG[key+'_label'],\r\n                     position: 'outer-middle'}\r\n            \r\n          }\r\n        }\r\n\r\n        if(dataG[key+'_axe']=='y2'){\r\n          axes[key]= dataG[key+'_axe'];\r\n          types[key] = dataG[key+'_chart'];\r\n          axisChart.y2 =  {\r\n                    show: true,\r\n                    label : {text: dataG[key+'_label'],\r\n                            position: 'outer-middle'}\r\n             \r\n          }\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n    objChart.types=types;\r\n    objChart.axes=axes;\r\n\r\n  c3.generate({\r\n    bindto: \"#chart\",\r\n    data: objChart,\r\n    title :{text: titre},\r\n    axis : axisChart\r\n    \r\n  });\r\n\r\n},[data])\r\n  \r\n\r\n\r\nif(data.length){\r\n  return  <div id=\"chart\" />;\r\n}\r\nelse{\r\n  return null;\r\n}\r\n}\r\n\r\n\r\n   \r\n\r\n    \r\n\r\n\r\n \r\n\r\n    \r\n    \r\n    \r\n","import React ,{ useState, useEffect, useContext }  from 'react';\r\nimport Axios from '../../../Authentification/AxiosInstance'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"../../../styles/Design.css\"; \r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Parametre from \"../../Main.Administrateur/Parametre\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport GrapheFct  from '../../Main.Administrateur/Fonctions/GrapheFct';\r\nimport 'c3/c3.css';\r\nimport {ExportToExcel} from '../../Main.Administrateur/ExportToExcel';\r\nimport '../Procedures/interface.css';\r\n\r\nexport default function Interface_utilisateur2({match}){\r\n\r\n    const [data, setData]= useState({});\r\n    const [dataGraph, setDataGraph]= useState([]);\r\n    const {control, setValue, register, handleSubmit}=useForm();\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const fileName = \"Data\";\r\n\r\n\r\n\r\n    useEffect(() => {  \r\n        Axios(setUser).get(`/Get_function_user/${match.params.fct}`)\r\n        .then(result => setData(result.data))\r\n        .catch(err => console.log(err));  \r\n        \r\n    }, []); \r\n\r\n\r\n    const onSubmit =(df)=>{\r\n       \r\n        Axios(setUser).post(`/set_function`, df)\r\n        .then (result => setDataGraph(result.data))\r\n        .catch(err => console.log(err));  \r\n    }\r\n    \r\n    \r\n     \r\n    return (\r\n        <div className=\"interface-user\"> \r\n        <form  onSubmit={handleSubmit(onSubmit)}>\r\n        <table className=\"table table-light\" >  \r\n\r\n            <tbody  >\r\n            {\r\n                \r\n                Object.keys(data).map((key ) =>{\r\n                    if(key==='bdd'){\r\n                        return(\r\n                            <input type='hidden' name='bdd' value={data[key]} ref={register} />\r\n                        )\r\n                    }\r\n                    if (key==='procedure'){\r\n                        return(\r\n                            \r\n                            <div >\r\n                            <h2 > {data[key]}  </h2>\r\n                            <input type=\"hidden\" value= {match.params.fct} name=\"nameProc\" ref={register}/>\r\n\r\n                            </div> \r\n                            )\r\n                    }\r\n                    if(key==='description'){\r\n                        return(\r\n                            <tr  className=\"row\">\r\n                                <th className='col-md-2'>DESCRIPTION</th>\r\n                                <td className='col-sm-7' >{data[key]} </td>  \r\n                            </tr>\r\n                        )\r\n                    }\r\n                    if (key.charAt(0)===\"@\"){\r\n                        return(\r\n                            <tr className=\"row\"  > \r\n                                <th className='col-md-2'>{data[key]} </th>  \r\n                               <td className='col-sm-7'> <Parametre type={key} valeur={data['valeur']} requete={data['request']} register={register} setValue ={setValue} control={control} /> </td>\r\n                            </tr>)\r\n                    } \r\n                    \r\n                })\r\n            }\r\n            <div className=\"div\">\r\n                <button style={{'marginTop':'10px'}} className=\"btn btn-primary\" type=\"submit\"> Executer</button> \r\n            </div>\r\n        </tbody>\r\n          \r\n        </table>\r\n\r\n        </form>\r\n         <div className=\"container\" style= {{\"marginTop\": \"30px \"}}>\r\n         <GrapheFct data={dataGraph} fonction={match.params.fct}  />\r\n    </div>\r\n    <div>\r\n      {\r\n\r\n        (dataGraph.length>0 &&  <ExportToExcel apiData={dataGraph} fileName={fileName} />) \r\n      }\r\n    </div>\r\n    \r\n    </div>\r\n        \r\n    )\r\n\r\n    \r\n    \r\n\r\n        \r\n}\r\n        \r\n    \r\n           \r\n\r\n","import React, { useState ,useEffect, useContext } from 'react' ; \r\nimport {Link} from 'react-router-dom';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {LoginContext} from '../../../Authentification/LoginContext';\r\nimport Axios from '../../../Authentification/AxiosInstance'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './AjoutFonction.styles.css';\r\n\r\nexport default function AjoutFonction(){\r\n    const {register, handleSubmit}= useForm();\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const [bdd, setBDD]=useState([]);\r\n    \r\n    \r\n    useEffect(()=>{\r\n        Axios(setUser).get('/BDD')\r\n        .then (result => setBDD(result.data))\r\n        .catch(err => console.log(err));  \r\n        \r\n    },[])\r\n\r\n    const onSubmit = (formData)=>{\r\n        Axios(setUser).post(`/AjoutFonction`, formData)\r\n        .then (result => console.log(result))\r\n        .catch(err => console.log(err));  \r\n\r\n    }\r\n\r\n    \r\n    return(\r\n        <div>\r\n        <div className=\"div2\">\r\n        <Link to={'/Affichage'}>\r\n            <button className=\"bouton\" >Affichage</button>\r\n        </Link>\r\n        <Link to= {'/AjoutProcedure'}>\r\n            <button className=\"bouton2\">Ajouter une procédure</button>\r\n        </Link >\r\n        <Link to= {'/ajoutFonction'}>\r\n            <button className=\"bouton3\">Ajouter une fonction</button>\r\n        </Link>\r\n        <Link to={'/'}>\r\n            <button className=\"search-btn\">Recherche</button>\r\n        </Link>\r\n                        \r\n        </div>\r\n        \r\n        <div   className=' div3'>\r\n   \r\n            <form  onSubmit={handleSubmit(onSubmit)}>\r\n                <div  className='form-group row'>\r\n                <div className='col-md-2'>\r\n                <label  for='namefct'>Nom Fonction  </label>\r\n                </div>\r\n                <div className=\"col-sm-9\">\r\n                <input  autoComplete='off' type=\"text\" className=\" content form-control\" id=\"namefct\" name='name'  placeholder=\"Insérer le nom de la fonction \" ref={register}/>\r\n               </div>\r\n               </div> \r\n\r\n                <div class=\" form-group row\">\r\n                <div className='col-md-2'>\r\n                    <label  for=\"bdd\">Base de données</label>\r\n                    </div>\r\n                    <div className='col-sm-9'>\r\n                    <select id='bdd' name = 'bdd' className=' content form-control' ref={register}>\r\n                        {bdd.map(item =>{\r\n                          return (\r\n                                   <option value={item.bdd}>{item.bdd}</option>\r\n                          )})}\r\n                    </select>\r\n                    </div>     \r\n                </div>\r\n                \r\n               \r\n                <div class=\"form-group row\">\r\n                <div className='col-md-2'>\r\n                    <label  for='proc' > Requête SQL </label>\r\n                    </div>\r\n                    <div className='col-sm-9'>\r\n                    <textarea autoComplete='off' type=\"text\" className=\"form-control\" id=\"proc\" name='fonction' placeholder=\"Insérer la requête \" ref={register}></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                <button onClick={()=>alert('Opération réussie')} type=\"submit\" className=\" btn1 btn btn-primary  \">Enregistrer</button>\r\n          \r\n            </form>\r\n           \r\n        </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/microphone.4f5bf693.png\";","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useForm} from 'react-hook-form';\r\nimport {Link} from 'react-router-dom';\r\nimport './SearchBar.styles.css';\r\nimport logo from '../images/logo.png';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport microphone from '../images/microphone.png';\r\n\r\nexport default function Search(){\r\n    const {register, handleSubmit}=useForm();\r\n    const [searchData, setSearchData]=useState([]);\r\n    const { transcript } = useSpeechRecognition()\r\n    const [searchKey , setSearchKey]=useState(\"\");\r\n    \r\n    const handleChange=(e)=>{\r\n        const value=e.target.value;\r\n        setSearchKey(value)\r\n    }\r\n\r\n    \r\n    const speech=()=>{\r\n        SpeechRecognition.startListening({continuous:false, language:'fr-FR'})\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        setSearchKey(transcript)\r\n    },[transcript])\r\n\r\n    const onSubmit=(search)=>{\r\n        axios.post('http://localhost:4000/searchBar', search)\r\n        .then(result=> setSearchData(result.data))\r\n        .catch(error=> console.log(error))\r\n\r\n    }\r\n    \r\n    \r\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\r\n    return(\r\n        <div className=\"container flex-column pas-rel\" >\r\n            <div >\r\n               <Link to={'/Login'}>\r\n                    <button style={{\"position\":\"absolute\", \"top\":\"30px\",\"right\":\"30px\"}} className=\"btn btn-info\" > S'authentifier</button> \r\n                </Link> \r\n            </div>\r\n            <div>\r\n                <img className=\"image\" src={logo} alt=\"logo\"/>\r\n            </div>\r\n            <div style={{\"marginTop\": \"40px\"}} className=\"container col-md-6\">\r\n\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"container input-group mb-3\">\r\n                        <input className=\"form-control\" type='text' autoComplete='off'  ref={register} name= 'search'/>\r\n                        <div className=\"input-group-append\">\r\n                            <button className=\"btn btn-outline-primary\" type='submit' >Rechercher</button>\r\n                        </div>\r\n                        \r\n                        \r\n                    </div>\r\n            </form>\r\n            </div>\r\n\r\n            \r\n            <div styles={{'marginTop':'10px'}} className=\"container \">\r\n            {(searchData.length>0) && (searchData[0].table_name)  &&\r\n            <table className=\"table table-bordered \">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Nom de la base de données</th>\r\n                                <th>Nom de la table</th>\r\n                                <th>Description de la table</th>\r\n                                <th>Nom de la colonne </th>\r\n                                <th>Type de la colonne</th>\r\n                                    \r\n                            </tr>\r\n                            </thead>\r\n                {searchData.map(item=>{\r\n                    return(\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>{item.database_name}</td>\r\n                                <td>{item.table_name}</td>\r\n                                <td>{item.table_description}</td>\r\n                                <td>{item.column_name}</td>\r\n                                <td>{item.column_type}</td>\r\n                                \r\n                                 \r\n                            </tr>\r\n                            </tbody>\r\n                        )   \r\n                })\r\n                }\r\n            </table>\r\n            }\r\n            {(searchData.length>0) && (searchData[0].valeur)  &&\r\n                <table className=\"table table-bordered \">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Séance</th>\r\n                        <th>Nom de l'entreprise</th>\r\n                        <th>Valeur du cours</th>\r\n                        <th>Valeur du volume</th>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                {searchData.map(item=>{\r\n                    return(\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>{item.seance_vf} </td>\r\n                                <td>{item.valeur}</td>\r\n                                <td>{item.cours_cloture} </td>\r\n                                <td>{item.volume} </td>\r\n                                 \r\n                            </tr>\r\n                            </tbody>\r\n                        )   \r\n                })\r\n                }\r\n            </table>\r\n            }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"container flex-column pas-rel\" >\r\n                <div >\r\n                   <Link to={'/Login'}>\r\n                        <button style={{\"position\":\"absolute\", \"top\":\"30px\",\"right\":\"30px\"}} className=\"btn btn-info\" > S'authentifier</button> \r\n                    </Link> \r\n                </div>\r\n                <div>\r\n                    <img className=\"image\" src={logo} alt=\"logo\"/>\r\n                </div>\r\n                <div style={{\"marginTop\": \"40px\"}} className=\"container col-md-6\">\r\n    \r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"container input-group mb-2\">\r\n                            <input className=\"form-control\" type='text' value={searchKey} onChange={handleChange}  autoComplete='off'  ref={register} name= 'search'/>\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-primary\" type='submit' >Rechercher</button>\r\n                            </div>\r\n                            <div>\r\n                                <button  className='vocal-search' onClick={speech}> \r\n                                    <img className=\"vocal-search-icon\" src={microphone} />\r\n                                </button>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                </form>\r\n                </div>\r\n    \r\n                \r\n                <div styles={{'marginTop':'10px'}} className=\"container \">\r\n                {(searchData.length>0) && (searchData[0].table_name)  &&\r\n                <table className=\"table table-bordered \">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Nom de la base de données</th>\r\n                                    <th>Nom de la table</th>\r\n                                    <th>Description de la table</th>\r\n                                    <th>Nom de la colonne </th>\r\n                                    <th>Type de la colonne</th>\r\n                                        \r\n                                </tr>\r\n                                </thead>\r\n                    {searchData.map(item=>{\r\n                        return(\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>{item.database_name}</td>\r\n                                    <td>{item.table_name}</td>\r\n                                    <td>{item.table_description}</td>\r\n                                    <td>{item.column_name}</td>\r\n                                    <td>{item.column_type}</td>\r\n                                    \r\n                                     \r\n                                </tr>\r\n                                </tbody>\r\n                            )   \r\n                    })\r\n                    }\r\n                </table>\r\n                }\r\n                {(searchData.length>0) && (searchData[0].valeur)  &&\r\n                    <table className=\"table table-bordered \">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Séance</th>\r\n                            <th>Nom de l'entreprise</th>\r\n                            <th>Valeur du cours</th>\r\n                            <th>Valeur du volume</th>\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    {searchData.map(item=>{\r\n                        return(\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>{item.seance_vf} </td>\r\n                                    <td>{item.valeur}</td>\r\n                                    <td>{item.cours_cloture} </td>\r\n                                    <td>{item.volume} </td>\r\n                                     \r\n                                </tr>\r\n                                </tbody>\r\n                            )   \r\n                    })\r\n                    }\r\n                </table>\r\n                }\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}","import React, { useState ,  useContext } from 'react'  \r\nimport Axios from '../../Authentification/AxiosInstance';  \r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\nimport {Link} from \"react-router-dom\";\r\nimport {LoginContext} from '../../Authentification/LoginContext';\r\nimport {useForm} from 'react-hook-form';\r\nimport \"./Home.procedures.css\";\r\n\r\nexport default function Home(){\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const[searchData, setSearchData]=useState([]);\r\n    const {handleSubmit,register}=useForm();\r\n\r\n    const onSubmit=(searchData)=>{\r\n        Axios(setUser).post('/search',searchData)\r\n        .then(result=>{setSearchData(result.data)\r\n                       console.log(result.data)})\r\n        .catch(err=>console.log(err))\r\n    }\r\n    return(\r\n        <div>\r\n            {(user.role=='admin')&&\r\n                <div >\r\n                    <div className=\"div2 \">\r\n                        <div  className=\"search-bar col-md-6 \">\r\n                            \r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div  >\r\n                                <div style={{ \"position\":\"absolute\",\"left\":\"420px\",\"top\":\"10px\"}} className=\" input-group mb-3 \">\r\n                                    <input  className=\" barre form-control\" type='text' autoComplete='off' placeholder='Chercher' ref={register} name= 'search'/>\r\n                                    <div className=\" input-group-append\">\r\n                                        <button className=\" barre btn btn-info\"  type='submit' > Recherche</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            \r\n                            </form>\r\n                            \r\n                        </div>\r\n                        \r\n                        <Link to={'/Affichage'}>\r\n                        <button className=\"bouton\" >Affichage</button>\r\n                        </Link>\r\n                        <Link to= {'/AjoutProcedure'}>\r\n                        <button className=\"bouton2\">Ajouter une procédure</button>\r\n                        </Link >\r\n                        <Link to= {'/ajoutFonction'}>\r\n                        <button className=\"bouton3\">Ajouter une fonction</button>\r\n                        </Link>\r\n\r\n                    </div>\r\n                    <div >\r\n                        {(searchData.length==0)&&\r\n                        <div  className='body-image' >\r\n                            \r\n                        </div>\r\n                        }\r\n                    </div>\r\n                    <div style={{'marginTop':'20px'}} className=\"container\">\r\n                    {(searchData.length>0) && (searchData[0].table_name)  &&\r\n                    <table className=\"table table-bordered \">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Nom de la base de données</th>\r\n                                        <th>Nom de la table</th>\r\n                                        <th>Description de la table</th>\r\n                                        <th>Nom de la colonne </th>\r\n                                        <th>Type de la colonne</th>\r\n                                        \r\n                                    </tr>\r\n                                    </thead>\r\n                        {searchData.map(item=>{\r\n                            return(\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>{item.database_name}</td>\r\n                                        <td>{item.table_name}</td>\r\n                                        <td>{item.table_description}</td>\r\n                                        <td>{item.column_name}</td>\r\n                                        <td>{item.column_type}</td>\r\n                                        \r\n                                        \r\n                                    </tr>\r\n                                    </tbody>\r\n                                )   \r\n                        })\r\n                        }\r\n                    </table>\r\n                    }\r\n                    {(searchData.length>0) && (searchData[0].valeur)  &&\r\n                        <table className=\"table table-bordered \">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Séance</th>\r\n                                <th>Nom de l'entreprise</th>\r\n                                <th>Valeur du cours</th>\r\n                                <th>Valeur du volume</th>\r\n                                \r\n                            </tr>\r\n                        </thead>\r\n                        {searchData.map(item=>{\r\n                            return(\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>{item.seance_vf} </td>\r\n                                        <td>{item.valeur}</td>\r\n                                        <td>{item.cours_cloture} </td>\r\n                                        <td>{item.volume} </td>\r\n                                        \r\n                                    </tr>\r\n                                    </tbody>\r\n                                )   \r\n                        })\r\n                        }\r\n                    </table>\r\n                    }\r\n                    \r\n                    \r\n                    </div>\r\n                </div>\r\n            }\r\n            {(user.role=='user')&&(\r\n                <div className='body-image'>\r\n                </div>\r\n            )\r\n\r\n            }\r\n        </div>\r\n            \r\n            \r\n    )\r\n\r\n\r\n\r\n}","import React, {useContext,useEffect} from 'react';\r\nimport Login from '../Authentification/Login';\r\nimport Utilisateurs from '../Gestion.Comptes.Utilisateurs/Utilisateurs';\r\nimport Details_procedures from '../Layouts/Main.Administrateur/Procedures/Details_procedure';\r\nimport Interface_utilisateur from '../Layouts/Main.Utilisateurs/Procedures/Interface_utilisateur';\r\nimport List_procedures from '../Layouts/Home/List_procedures';\r\nimport {Route, Switch, useHistory} from 'react-router-dom';\r\nimport {LoginContext} from '../Authentification/LoginContext';\r\nimport Axios from '../Authentification/AxiosInstance';\r\nimport ProtectedRoutes from './ProtectedRoutes';\r\nimport GrapheParametres from '../Layouts/Main.Administrateur/Procedures/GrapheParametres';\r\nimport Lister_utilisateurs from '../Gestion.Comptes.Utilisateurs/Lister_utilisateurs';\r\nimport AjoutProcedure from '../Layouts/Main.Administrateur/Procedures/AjoutProcedure';\r\nimport Details_fonction from '../Layouts/Main.Administrateur/Fonctions/Details_fonction';\r\nimport GrapheParametresFct from '../Layouts/Main.Administrateur/Fonctions/GrapheParametresFct';\r\nimport Interface_utilisateur2 from '../Layouts/Main.Utilisateurs/Fonctions/Interface_utilisateur2';\r\nimport AjoutFonction from '../Layouts/Main.Administrateur/Fonctions/AjoutFonction';\r\nimport SearchBar from '../Moteur.recherche/SearchBar';\r\nimport Home from '../Layouts/Home/Home';\r\n\r\n\r\nexport default function AppRoutes(){\r\n    const [user,setUser]=useContext(LoginContext);\r\n    const history= useHistory();\r\n   \r\n    useEffect(()=> {\r\n        if (!user.isLoggedIn){\r\n            if(localStorage.getItem('token')){\r\n                Axios(setUser).get('/IsConnected/')\r\n                .then(result => {\r\n                    setUser(result.data)\r\n                })\r\n                .catch(err => console.log(err))\r\n                \r\n            }\r\n            else{\r\n                history.push('/Home')\r\n\r\n            }\r\n        }    \r\n    },[user])\r\n        \r\n    \r\n    return(\r\n        <div>\r\n\r\n            <Switch> \r\n                <Route path=\"/Home\" exact component={SearchBar}/>\r\n                <Route path=\"/Login\" exact  component={Login} />\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/Affichage\" exact  component={List_procedures} />\r\n                <ProtectedRoutes path=\"/AjoutProcedure\" exact component={AjoutProcedure} role={['admin']}/>\r\n                <ProtectedRoutes path=\"/AjoutFonction\" exact component={AjoutFonction} role={['admin']}/>\r\n                <ProtectedRoutes path=\"/Lister_utilisateurs\" exact component={Lister_utilisateurs} role={['admin']}/>\r\n                <ProtectedRoutes path=\"/Utilisateurs\" exact component={Utilisateurs} role={['admin']}/>\r\n                <ProtectedRoutes path=\"/Utilisateurs/:id\" exact component={Utilisateurs} role={['admin']}/>\r\n                <ProtectedRoutes path= \"/Details_procedure/:name/:baseDD\" exact component={Details_procedures} role={['admin']}/>\r\n                <ProtectedRoutes path= \"/Details_fonction/:name/:baseDD\" exact component={Details_fonction} role={['admin']}/>\r\n                <ProtectedRoutes path= \"/Interface_utilisateur/:proc\" exact component={Interface_utilisateur} role={['user']}/>\r\n                <ProtectedRoutes path= \"/Interface_utilisateur2/:fct\" exact component={Interface_utilisateur2} role={['user']}/>\r\n                <ProtectedRoutes path= \"/GrapheParametres/:proc\" exact component={GrapheParametres} role={['admin']}/>\r\n                <ProtectedRoutes path= \"/GrapheParametresFct/:fct\" exact component={GrapheParametresFct} role={['admin']}/>\r\n\r\n            </Switch>  \r\n        </div>)\r\n\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Footer from './Layouts/Footer';\r\nimport Header from './Layouts/Header';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport AppRoutes from './Gestion.Acces.Utilisateurs/AppRoutes';\r\n\r\nexport default function App(){\r\n     \r\n    return(\r\n         \r\n        <div>\r\n            <Router >\r\n                <Header/>\r\n                <AppRoutes/>\r\n            </Router>\r\n        </div>\r\n        )\r\n}\r\n\r\n   \r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from'./App';\nimport {LoginProvider} from './Authentification/LoginContext';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LoginProvider>\n        <App />\n    </LoginProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}